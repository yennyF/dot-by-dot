@tailwind base;
@tailwind components;
@tailwind utilities;

html, body {
  overscroll-behavior-x: none; // block go back page behavior on Chrome
  // overscroll-behavior-y: none;
  font-size: medium;
}
:root {
  --background: #f1efe7;
  --foreground: #0a0a0a;
  --accent: #c07858;
  --accent-4: #E4CBC1;
  --accent-5: #E0BEB0;
  // --inverted: #3f87a7;
  --inverted: #58a0c0;
  --white: #ffffff;
  --black: #3c3d42;
  --gray: #d7d7d7;
  --gray-9: #696B75;
  --green: #58c078;
  --green-5: rgba(88, 192, 120, 0.2);

  --width-name: 300px;
  --width-day: 42px;
  --height-row: 42px;

  --toastify-color-light: var(--background); 
  --toastify-color-progress-light: var(--accent);
  --toastify-font-family:@apply font-mono
}

@media (prefers-color-scheme: dark) {
  :root {
    /* --background: #0a0a0a;
    --foreground: #ededed; */
  }
}

* {
  box-sizing: border-box;
}

body {
  color: var(--foreground);
  background: var(--background);
  @apply font-mono;
}

input {
  @apply rounded px-2 py-1 text-[var(--gray-9)] focus:outline-none;
}

.warning-xs {
  @apply text-xs text-red-500;
}

.warning-sm {
  @apply text-sm text-red-500;
}

[draggable="true"] {
  /* To prevent user selecting inside the drag source */
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

/* Basic drag states */
.draggable {
  @apply cursor-grab active:cursor-grabbing hover:cursor-grab focus:cursor-grab;
}

.overlay {
  background: rgba(0 0 0 / 0.5);
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  display: grid;
  justify-items: end;
  z-index: 100;

  &[data-state="open"] {
    animation: fadeIn 100ms ease-out;
  }

  &[data-state="closed"] {
    animation: fadeOut 100ms ease-in;
  }
}

.dialog-content {
  outline: 0;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;
  max-width: 580px;
  max-height: 90vh;
  padding: 30px;
  background: var(--background);
  display: flex;
  flex-direction: column;
  justify-content: center;

  .dialog-title {
    @apply text-xl;
    font-weight: bold;
  }

  .dialog-description {
      margin-top: 50px;
  }

  .dialog-bottom {
    margin-top: 20px;
    display: flex;
    justify-content: center;
    @apply gap-3;
  }
}

.popover-content {
  outline: 0;
  padding: 25px;
  background: var(--background);
  box-shadow:
    hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;

  .arrow {
    fill: var(--background);
  }
}

.dropdown-content {
  background: var(--background);
  box-shadow:
    hsl(206 22% 7% / 35%) 0px 10px 38px -10px,
    hsl(206 22% 7% / 20%) 0px 10px 20px -15px;

    .dropdown-item {
      padding: 10px 15px;
      cursor: default;
      outline: none;

      &:hover {
        background: var(--gray-9);
        color: var(--white);
      }
    }

    .arrow {
      fill: var(--background);
    }
}

.tooltip-content {
  @apply 
  select-none 
  rounded 
  bg-[var(--background)] 
  px-[15px] py-2.5 
  text-[15px] 
  leading-none 
  shadow-[hsl(206_22%_7%_/_35%)_0px_10px_38px_-10px,_hsl(206_22%_7%_/_20%)_0px_10px_20px_-15px] 
  will-change-[transform,opacity];
}

.tooltip-arrow {
  @apply fill-[var(--background)] 
}

.checkbox {
  @apply flex gap-3;

  .checkbox-box {
    @apply flex size-[14px] flex-shrink-0 appearance-none items-center justify-center rounded-sm outline-none outline-1 outline-offset-0 outline-[var(--black)];

    &[data-state="checked"] {
      @apply bg-[var(--accent)] outline-[var(--accent)];

      svg {
        @apply text-white
      }
    }
  }

  .checkbox-indicator-hover {
    @apply hidden text-[var(--gray-9)];
  }

  .checkbox-label {
    @apply hover:cursor-pointer;
  }
}

/* Hide scrollbar for Chrome, Safari and Opera */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.no-scrollbar {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

@layer components {
  .button {
    @apply w-fit h-fit flex justify-center items-center rounded-full cursor-pointer transition-all focus:outline-none disabled:pointer-events-none disabled:opacity-30;
  }

  .button-text {
    @apply button gap-2 px-6 py-2;

    &.button-sm {
      @apply gap-1 px-3 h-[32px] text-sm border-[1px];
    }
  }

  .button-icon {
    @apply button p-1;
  }

  .button-accent-outline {
    @apply button-text border-2 border-[var(--accent)] bg-[var(--background)] text-[var(--accent)] hover:border-[var(--black)] hover:bg-[var(--black)] hover:text-[var(--white)];
  }
  
  .button-accent {
    @apply button-text bg-[var(--accent)] text-[var(--white)] hover:bg-[var(--background)] hover:text-[var(--accent)] hover:border-[var(--accent)] border-2 border-[var(--accent)];
  }

  .button-outline {
    @apply button-text border-2 border-[var(--black)] bg-[var(--background)] text-[var(--black)] hover:border-[var(--black)] hover:bg-[var(--black)] hover:text-[var(--white)];

    // svg {
    //   @apply h-[20px] w-[20px] shrink-0 m-[2px];
    // }
  }

  .button-accept {
    @apply button-text bg-[var(--accent)] text-[var(--white)] hover:bg-[var(--black)];
  }

  .button-cancel {
    @apply button-text bg-[var(--gray-9)] text-[var(--white)] hover:bg-[var(--black)];
  }

  .button-icon-sheer {
    @apply button-icon hover:bg-[var(--black)] ;

    &:hover svg {
      @apply text-[var(--white)];
    }

    &[data-state="open"] {
      @apply bg-[var(--black)];

      svg {
        @apply text-[var(--white)];
      }
    }
  }

  .button-icon-accent {
    @apply button-icon bg-[var(--accent)] hover:bg-[var(--black)];

    svg {
      @apply text-[var(--white)]
    }

    &:hover svg {
      @apply text-[var(--white)];
    }

    &[data-state="open"] {
      @apply bg-[var(--black)];

      svg {
        @apply text-[var(--white)];
      }
    }
  }

  .button-icon-inverted {
    @apply button-icon bg-[var(--inverted)] hover:bg-[var(--black)];

    svg {
      @apply text-[var(--white)]
    }

    &:hover svg {
      @apply text-[var(--white)];
    }
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(100%);
  }

  to {
    transform: translateX(0%);
  }
}

@keyframes slideOut {
  from {
    transform: translateX(0%);
  }

  to {
    transform: translateX(100%);
  }
}